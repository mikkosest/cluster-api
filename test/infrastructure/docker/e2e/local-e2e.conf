---
images:
# Using the Makefile found in the docker provider, run `make docker-build REGISTRY=gcr.io/k8s-staging-capi-docker`.
- name: gcr.io/k8s-staging-capi-docker/capd-manager-amd64:dev
  loadBehavior: mustLoad
# Use `make docker-build REGISTRY=gcr.io/k8s-staging-cluster-api` to build these images.
- name: gcr.io/k8s-staging-cluster-api/cluster-api-controller-amd64:dev
  loadBehavior: tryLoad
- name: gcr.io/k8s-staging-cluster-api/kubeadm-bootstrap-controller-amd64:dev
  loadBehavior: tryLoad
- name: gcr.io/k8s-staging-cluster-api/kubeadm-control-plane-controller-amd64:dev
  loadBehavior: tryLoad
# Make a custom config file if you'd like to test just docker changes against latest published staging master image.

components:

# Load the certificate manager and wait for all of its pods and service to
# become available.
- name:    cert-manager
  sources:
  - type:  url
    value: https://github.com/jetstack/cert-manager/releases/download/v0.11.1/cert-manager.yaml
  waiters:
  - type:  service
    value: v1beta1.webhook.cert-manager.io
  - value: cert-manager

# Load CAPI core and wait for its pods to become available.
- name:    capi
  sources:
  - value: ../../../../config/default
    replacements:
    - old: "imagePullPolicy: Always"
      new: "imagePullPolicy: IfNotPresent"
    - old: "--enable-leader-election"
      new: "--enable-leader-election=false"
  waiters:
  - value: capi-system

# Load the CAPI kubeadm bootstrapper and wait for its pods to become available.
- name:    capi-kubeadm-bootstrap
  sources:
  - value: ../../../../bootstrap/kubeadm/config/default
    replacements:
    - old: "imagePullPolicy: Always"
      new: "imagePullPolicy: IfNotPresent"
    - old: "--enable-leader-election"
      new: "--enable-leader-election=false"
  waiters:
  - value: capi-kubeadm-bootstrap-system

# Load the CAPI kubeadm control plane and wait for its pods to become available.
- name:    capi-kubeadm-control-plane
  sources:
  - value: ../../../../controlplane/kubeadm/config/default
    replacements:
    - old: "imagePullPolicy: Always"
      new: "imagePullPolicy: IfNotPresent"
    - old: "--enable-leader-election"
      new: "--enable-leader-election=false"
  waiters:
  - value: capi-kubeadm-control-plane-system

# Load CAPD and wait for its pods to become available.
- name:    capd
  sources:
  - value: ../config/default
    replacements:
    - old: "imagePullPolicy: Always"
      new: "imagePullPolicy: IfNotPresent"
    - old: "--enable-leader-election"
      new: "--enable-leader-election=false"
  waiters:
  - value: capd-system
